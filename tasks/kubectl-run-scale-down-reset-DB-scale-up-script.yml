platform: linux

image_resource:
  type: docker-image
  source:
    repository: eu.gcr.io/census-gcr/gcloud-kubectl

params:
  GCP_PROJECT_NAME:
  KUBERNETES_CLUSTER:
  KUBERNETES_FILE_PATH:
  SERVICE_ACCOUNT_JSON:
  WAIT_UNTIL_AVAILABLE_TIMEOUT:

inputs:
  - name: kubernetes-repo
run:
  path: sh
  args:
    - -exc
    - |
      cat >~/gcloud-service-key.json <<EOL
      $SERVICE_ACCOUNT_JSON
      EOL

      # Use gcloud service account to configure kubectl
      gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
      gcloud container clusters get-credentials ${KUBERNETES_CLUSTER} --zone europe-west2 --project ${GCP_PROJECT_NAME}

      # Scale down apps
      kubectl scale deployment action-worker --replicas=0
      kubectl scale deployment case-processor --replicas=0
      kubectl scale deployment notify-processor --replicas=0

      # Wipe and rebuild database
      kubectl apply -f ${KUBERNETES_FILE_PATH}/census-rm-ddl-pod.yml --record
      kubectl wait --for=condition=Ready pod/census-rm-ddl --timeout=${WAIT_UNTIL_AVAILABLE_TIMEOUT}

      kubectl exec $(kubectl get pods --selector=app=census-rm-ddl -o jsonpath='{.items[*].metadata.name}') -- /bin/bash groundzero_ddl/rebuild_from_ground_zero.sh

      # Tidy up pod
      kubectl delete pod census-rm-ddl || true

      # Scale up apps
      kubectl scale deployment action-worker --replicas=1
      kubectl scale deployment case-processor --replicas=1
      kubectl scale deployment notify-processor --replicas=1

      # Wait for rollout to finish
      kubectl rollout status deploy action-worker --watch=true --timeout=400s
      kubectl rollout status deploy case-processor --watch=true --timeout=200s
      kubectl rollout status deploy notify-processor --watch=true --timeout=200s
