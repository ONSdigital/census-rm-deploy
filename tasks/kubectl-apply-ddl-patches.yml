platform: linux

image_resource:
  type: docker-image
  source:
    repository: eu.gcr.io/census-gcr/gcloud-kubectl

params:
  GCP_PROJECT_NAME:
  KUBERNETES_CLUSTER:
  KUBERNETES_FILE_PATH:
  SERVICE_ACCOUNT_JSON:
  WAIT_UNTIL_AVAILABLE_TIMEOUT:

inputs:
  - name: kubernetes-repo
run:
  path: sh
  args:
    - -exc
    - |
      cat >~/gcloud-service-key.json <<EOL
      $SERVICE_ACCOUNT_JSON
      EOL

      # Use gcloud service account to configure kubectl
      gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
      gcloud container clusters get-credentials ${KUBERNETES_CLUSTER} --zone europe-west2 --project ${GCP_PROJECT_NAME}

      # Delete deployment and pod to make sure nothing is left over
      kubectl delete deploy census-rm-ddl --force --grace-period=0 --wait || true
      kubectl delete pod $(kubectl get pods --selector=app=census-rm-ddl -o jsonpath='{.items[*].metadata.name}') --wait || true

      # Apply deployment config
      kubectl apply -f ${KUBERNETES_FILE_PATH}/census-rm-ddl-deployment.yml --record

      # Wait for rollout to finish
      kubectl rollout status deploy census-rm-ddl --watch=true --timeout=${WAIT_UNTIL_AVAILABLE_TIMEOUT}

      # Apply database patches
      kubectl exec -it $(kubectl get pods --selector=app=census-rm-ddl -o jsonpath='{.items[*].metadata.name}') -- python patch_database.py

      # Tidy up deployment and pod
      kubectl delete deploy census-rm-ddl
      kubectl delete pod $(kubectl get pods --selector=app=census-rm-ddl -o jsonpath='{.items[*].metadata.name}') || true