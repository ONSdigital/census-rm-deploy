---
resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.13"

resources:
- name: census-rm-deploy
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-deploy.git
    private_key: ((github-private-key))
    branch: initial-ci-pipelines

- name: census-rm-kubernetes-microservices-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-kubernetes.git
    private_key: ((github-private-key))
    paths: [microservices/*]

- name: census-rm-kubernetes-handlers-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-kubernetes.git
    private_key: ((github-private-key))
    paths: [handlers/*]

- name: actionsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-actionsvc

- name: actionexportersvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-actionexportersvc

- name: casesvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-casesvc

- name: collectionexercisesvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-collectionexercisesvc

- name: collectioninstrumentsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-collectioninstrumentsvc

- name: commstemplatesvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-commstemplatesvc

- name: iacsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-iacsvc

- name: notifygatewaysvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-notifygatewaysvc

- name: samplesvc-stub-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-samplesvc-stub

- name: surveysvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-surveysvc

- name: fwmtjobsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-fwmtjobsvc

- name: fwmtrmadapter-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-fwmtrmadapter

- name: partysvc-stub-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-ci/census-rm-partysvcstub

jobs:

# Kubernetes Config
- name: deploy-microservices
  serial: true
  serial_groups: [actionsvc, casesvc, collectionexercisesvc, collectioninstrumentsvc, commstemplatesvc, iacsvc, samplesvc, surveysvc, partysvc-stub]
  plan:
  - get: actionsvc-docker-latest
    params:
      skip_download: true
  - get: casesvc-docker-latest
    params:
      skip_download: true
  - get: collectionexercisesvc-docker-latest
    params:
      skip_download: true
  - get: collectioninstrumentsvc-docker-latest
    params:
      skip_download: true
  - get: commstemplatesvc-docker-latest
    params:
      skip_download: true
  - get: iacsvc-docker-latest
    params:
      skip_download: true
  - get: samplesvc-stub-docker-latest
    params:
      skip_download: true
  - get: surveysvc-docker-latest
    params:
      skip_download: true
  - get: partysvc-stub-docker-latest
    params:
      skip_download: true
  - get: census-rm-kubernetes-microservices-repo
    trigger: true
  - get: census-rm-deploy
  - task: kubectl-apply-microservices
    file: census-rm-deploy/tasks/kubectl-apply-file.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_FILE_PATH: kubernetes-file/microservices
      KUBERNETES_SELECTOR: "app in (actionsvc, casesvc, collectionexercisesvc, collectioninstrumentsvc, commstemplatesvc, iacsvc, partysvc, samplesvc-stub, surveysvc)"
      SLEEP_TIME_FOR_STARTUP: 180

    input_mapping: {kubernetes-file: census-rm-kubernetes-microservices-repo}

- name: deploy-handlers
  serial: true
  serial_groups: [actionexportersvc, fwmtjobsvc, fwmtadaptersvc, notifygatewaysvc]
  plan:
  - get: actionexportersvc-docker-latest
    params:
      skip_download: true
  - get: fwmtjobsvc-docker-latest
    params:
      skip_download: true
  - get: fwmtrmadapter-docker-latest
    params:
      skip_download: true
  - get: notifygatewaysvc-docker-latest
    params:
      skip_download: true
  - get: census-rm-kubernetes-handlers-repo
    trigger: true
  - get: census-rm-deploy
  - task: kubectl-apply-hanlders
    file: census-rm-deploy/tasks/kubectl-apply-file.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_FILE_PATH: kubernetes-file/handlers
      KUBERNETES_SELECTOR: "app in (actionexportersvc, notifygatewaysvc, fwmtgatewayjobsvc, fwmtgatewayrmadapter)"
      SLEEP_TIME_FOR_STARTUP: 180
    input_mapping: {kubernetes-file: census-rm-kubernetes-handlers-repo}

# Patch to trigger Kubernetes image pull on new latest tag builds
- name: actionsvc-deploy-latest
  serial: true
  serial_groups: [actionsvc]
  plan:
  - get: actionsvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: actionsvc
      KUBERNETES_SELECTOR: app=actionsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: actionsvc-docker-latest}

- name: actionexportersvc-deploy-latest
  serial: true
  serial_groups: [actionexportersvc]
  plan:
  - get: actionexportersvc-docker-latest
    trigger: true
    passed: [deploy-handlers]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: actionexportersvc
      KUBERNETES_SELECTOR: app=actionexportersvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: actionexportersvc-docker-latest}

- name: casesvc-deploy-latest
  serial: true
  serial_groups: [casesvc]
  plan:
  - get: casesvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: casesvc
      KUBERNETES_SELECTOR: app=casesvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: casesvc-docker-latest}

- name: collectionexercisesvc-deploy-latest
  serial: true
  serial_groups: [collectionexercisesvc]
  plan:
  - get: collectionexercisesvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: collectionexercisesvc
      KUBERNETES_SELECTOR: app=collectionexercisesvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: collectionexercisesvc-docker-latest}

- name: collectioninstrumentsvc-deploy-latest
  serial: true
  serial_groups: [collectioninstrumentsvc]
  plan:
  - get: collectioninstrumentsvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: collectioninstrumentsvc
      KUBERNETES_SELECTOR: app=collectioninstrumentsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 60
    input_mapping: {docker-image-resource: collectioninstrumentsvc-docker-latest}

- name: commstemplatesvc-deploy-latest
  serial: true
  serial_groups: [commstemplatesvc]
  plan:
  - get: commstemplatesvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: commstemplate
      KUBERNETES_SELECTOR: app=commstemplate
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 60
    input_mapping: {docker-image-resource: commstemplate-docker-latest}

- name: iacsvc-deploy-latest
  serial: true
  serial_groups: [iacsvc]
  plan:
  - get: iacsvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: iacsvc
      KUBERNETES_SELECTOR: app=iacsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: iacsvc-docker-latest}

- name: notifygatewaysvc-deploy-latest
  serial: true
  serial_groups: [notifygatewaysvc]
  plan:
  - get: notifygatewaysvc-docker-latest
    trigger: true
    passed: [deploy-handlers]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: notifygatewaysvc
      KUBERNETES_SELECTOR: app=notifygatewaysvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: notifygatewaysvc-docker-latest}

- name: samplesvc-stub-deploy-latest
  serial: true
  serial_groups: [samplesvc]
  plan:
  - get: samplesvc-stub-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: samplesvc-stub
      KUBERNETES_SELECTOR: app=samplesvc-stub
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 30
    input_mapping: {docker-image-resource: samplesvc-stub-docker-latest}

- name: surveysvc-deploy-latest
  serial: true
  serial_groups: [surveysvc]
  plan:
  - get: surveysvc-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: surveysvc
      KUBERNETES_SELECTOR: app=surveysvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 30
    input_mapping: {docker-image-resource: surveysvc-docker-latest}

- name: fwmtjobsvc-deploy-latest
  serial: true
  serial_groups: [fwmtjobsvc]
  plan:
  - get: fwmtjobsvc-docker-latest
    trigger: true
    passed: [deploy-handlers]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: fwmtgatewayjobsvc
      KUBERNETES_SELECTOR: app=fwmtgatewayjobsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: fwmtjobsvc-docker-latest}

- name: fwmtrmadapter-deploy-latest
  serial: true
  serial_groups: [fwmtadaptersvc]
  plan:
  - get: fwmtrmadapter-docker-latest
    trigger: true
    passed: [deploy-handlers]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: fwmtgatewayrmadapter
      KUBERNETES_SELECTOR: app=fwmtgatewayrmadapter
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200
    input_mapping: {docker-image-resource: fwmtrmadapter-docker-latest}

- name: partysvc-stub-deploy-latest
  serial: true
  serial_groups: [partysvc-stub]
  plan:
  - get: partysvc-stub-docker-latest
    trigger: true
    passed: [deploy-microservices]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_NAMESPACE: ((kubernetes-namespace))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: partysvc
      KUBERNETES_SELECTOR: app=partysvc-stub
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 60
    input_mapping: {docker-image-resource: partysvc-stub-docker-latest}
