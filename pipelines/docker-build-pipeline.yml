resource_types:

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:

  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack.webhook))

  - name: action-scheduler-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-action-scheduler.git
      private_key: ((github.service_account_private_key))

  - name: case-api-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-case-api.git
      private_key: ((github.service_account_private_key))

  - name: case-processor-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-case-processor.git
      private_key: ((github.service_account_private_key))

  - name: print-file-service-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-print-file-service
      private_key: ((github.service_account_private_key))

  - name: uac-qid-service-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-uac-qid-service.git
      private_key: ((github.service_account_private_key))

  - name: ops-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-ops.git
      private_key: ((github.service_account_private_key))

  - name: rm-toolbox-master
    type: git
    source:
      uri: git@github.com/ONSdigital/census-rm-toolbox
      private_key: ((github.service_account_private_key))

  - name: pubsub-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-pubsub.git
      private_key: ((github.service_account_private_key))

  - name: qid-batch-runner-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-qid-batch-runner.git
      private_key: ((github.service_account_private_key))

  - name: sample-loader-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-sample-loader.git
      private_key: ((github.service_account_private_key))

  - name: acceptance-tests-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-acceptance-tests.git
      private_key: ((github.service_account_private_key))

  - name: fieldwork-adapter-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-fieldwork-adapter.git
      private_key: ((github.service_account_private_key))

  - name: notify-processor-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-notify-processor.git
      private_key: ((github.service_account_private_key))

  - name: notify-stub-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-notify-stub.git
      private_key: ((github.service_account_private_key))

  - name: data-exporter-master
    type: git
    source:
      uri: git@github.com:ONSdigital/census-rm-dataexporter.git
      private_key: ((github.service_account_private_key))

  - name: action-scheduler-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-action-scheduler
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-scheduler-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-action-scheduler
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-api-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-case-api
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-api-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-case-api
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-processor-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-case-processor
      username: _json_key
      password: ((gcp.service_account_json))
  
  - name: case-processor-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-case-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: print-file-service-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-print-file-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: print-file-service-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-print-file-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: uac-qid-service-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-uac-qid-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: uac-qid-service-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-uac-qid-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ops-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-ops
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ops-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-ops
      username: _json_key
      password: ((gcp.service_account_json))

  - name: rm-toolbox-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-toolbox
      username: _json_key
      password: ((gcp.service_account_json))

  - name: rm-toolbox-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-toolbox
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-pubsub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-pubsub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: qid-batch-runner-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-qid-batch-runner
      username: _json_key
      password: ((gcp.service_account_json))

  - name: qid-batch-runner-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-qid-batch-runner
      username: _json_key
      password: ((gcp.service_account_json))

  - name: sample-loader-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-sample-loader
      username: _json_key
      password: ((gcp.service_account_json))

  - name: sample-loader-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-sample-loader
      username: _json_key
      password: ((gcp.service_account_json))

  - name: acceptance-tests-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-acceptance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: acceptance-tests-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-acceptance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: fieldwork-adapter-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-fieldwork-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: fieldwork-adapter-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-fieldwork-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-processor-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-notify-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-processor-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-notify-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-stub-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-notify-stub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-stub-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-notify-stub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: data-exporter-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-data-exporter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: data-exporter-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-data-exporter
      username: _json_key
      password: ((gcp.service_account_json))

templating:

slack_failure_alert_prebuild: &slack_failure_alert_prebuild
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
        {
            "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "title": "$BUILD_JOB_NAME failed",
            "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "fields": [
                {
                    "title": "Pipeline",
                    "value": "$BUILD_PIPELINE_NAME",
                    "short": true
                },
                {
                    "title": "Build",
                    "value": "#$BUILD_NAME",
                    "short": true
                }
            ],
            "color": "#F35A00"
        }
    ]

slack_failure_alert_ci: &slack_failure_alert_ci
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
        {
            "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "title": "$BUILD_JOB_NAME failed",
            "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "fields": [
                {
                    "title": "Pipeline",
                    "value": "$BUILD_PIPELINE_NAME",
                    "short": true
                },
                {
                    "title": "Registry",
                    "value": "((docker-registry-ci))",
                    "short": true
                },
                {
                    "title": "Build",
                    "value": "#$BUILD_NAME",
                    "short": true
                }
            ],
            "color": "#F35A00"
        }
    ]

slack_failure_alert_gcr: &slack_failure_alert_gcr
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
        {
            "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "title": "$BUILD_JOB_NAME failed",
            "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
            "fields": [
                {
                    "title": "Pipeline",
                    "value": "$BUILD_PIPELINE_NAME",
                    "short": true
                },
                {
                    "title": "Registry",
                    "value": "((docker-registry-gcr))",
                    "short": true
                },

                {
                    "title": "Build",
                    "value": "#$BUILD_NAME",
                    "short": true
                }
            ],
            "color": "#F35A00"
        }
    ]

jobs:

  - name: build-action-scheduler-master
    plan:
    - get: action-scheduler-master
      trigger: true
    - task: Build Action Scheduler Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: action-scheduler-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd action-scheduler-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: action-scheduler-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: action-scheduler-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: action-scheduler-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - action-scheduler-docker-image-ci
        tag_file: action-scheduler-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-case-api-master
    plan:
    - get: case-api-master
      trigger: true
    - task: Build Case API Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: case-api-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd case-api-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
    - put: case-api-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: case-api-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: case-api-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - case-api-docker-image-ci
        tag_file: case-api-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-case-processor-master
    plan:
    - get: case-processor-master
      trigger: true
    - task: Build Case Processor Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: case-processor-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd case-processor-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: case-processor-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: case-processor-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: case-processor-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - case-processor-docker-image-ci
        tag_file: case-processor-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-print-file-service-master
    plan:
    - get: print-file-service-master
      trigger: true
    - put: print-file-service-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: print-file-service-master
        tag_file: print-file-service-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: print-file-service-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: print-file-service-master
        cache_from:
          - print-file-service-docker-image-ci
        tag_file: print-file-service-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-uac-qid-service-master
    plan:
    - get: uac-qid-service-master
      trigger: true
    - task: Build UAC QID Service Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: uac-qid-service-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd uac-qid-service-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/*.jar ../build/target
              cp Dockerfile ../build
    - put: uac-qid-service-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: uac-qid-service-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: uac-qid-service-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - uac-qid-service-docker-image-ci
        tag_file: uac-qid-service-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-ops-master
    plan:
    - get: ops-master
      trigger: true
    - put: ops-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: ops-master
        tag_file: ops-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: ops-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: ops-master
        cache_from:
          - ops-docker-image-ci
        tag_file: ops-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-rm-toolbox-master
    plan:
    - get: rm-toolbox-master
      trigger: true
    - put: rm-toolbox-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: rm-toolbox-master
        tag_file: rm-toolbox-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: rm-toolbox-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: rm-toolbox-master
        cache_from:
          - rm-toolbox-docker-image-ci
        tag_file: rm-toolbox-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-pubsub-master
    plan:
    - get: pubsub-master
      trigger: true
    - put: pubsub-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: pubsub-master
        tag_file: pubsub-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: pubsub-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: pubsub-master
        cache_from:
          - pubsub-docker-image-ci
        tag_file: pubsub-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-batch-runner-master
    plan:
    - get: qid-batch-runner-master
      trigger: true
    - put: qid-batch-runner-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: qid-batch-runner-master
        tag_file: qid-batch-runner-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: qid-batch-runner-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: qid-batch-runner-master
        cache_from:
          - qid-batch-runner-docker-image-ci
        tag_file: qid-batch-runner-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-sample-loader-master
    plan:
    - get: sample-loader-master
      trigger: true
    - put: sample-loader-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: sample-loader-master
        tag_file: sample-loader-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: sample-loader-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: sample-loader-master
        cache_from:
          - sample-loader-docker-image-ci
        tag_file: sample-loader-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-acceptance-tests-master
    plan:
    - get: acceptance-tests-master
      trigger: true
    - put: acceptance-tests-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: acceptance-tests-master
        tag_file: acceptance-tests-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: acceptance-tests-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: acceptance-tests-master
        cache_from:
          - acceptance-tests-docker-image-ci
        tag_file: acceptance-tests-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-fieldwork-adapter-master
    plan:
    - get: fieldwork-adapter-master
      trigger: true
    - task: Build Fieldwork Adapter Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: fieldwork-adapter-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd fieldwork-adapter-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: fieldwork-adapter-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: fieldwork-adapter-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: fieldwork-adapter-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - fieldwork-adapter-docker-image-ci
        tag_file: fieldwork-adapter-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-notify-processor-master
    plan:
    - get: notify-processor-master
      trigger: true
    - task: Build Notify Processor Image (master)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: notify-processor-master
        outputs:
          - name: build
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd notify-processor-master
              mvn package -DskipITs -Ddockerfile.skip
              cp target/*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: notify-processor-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: build
        tag_file: notify-processor-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: notify-processor-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: build
        cache_from:
          - notify-processor-docker-image-ci
        tag_file: notify-processor-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-notify-stub-master
    plan:
    - get: notify-stub-master
      trigger: true
    - put: notify-stub-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: notify-stub-master
        tag_file: notify-stub-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: notify-stub-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: notify-stub-master
        cache_from:
          - notify-stub-docker-image-ci
        tag_file: notify-stub-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true

  - name: build-data-exporter-master
    plan:
    - get: data-exporter-master
      trigger: true
    - put: data-exporter-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: data-exporter-master/docker
        tag_file: data-exporter-master/.git/ref
        tag_as_latest: true
      get_params:
        save: true
    - put: data-exporter-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: data-exporter-master/docker
        cache_from:
          - data-exporter-docker-image-ci
        tag_file: data-exporter-master/.git/ref
        tag_as_latest: true
      get_params:
        skip_download: true
