resource_types:

  - name: github-release-latest
    type: docker-image
    source:
      repository: concourse/github-release-resource
      tag: 1.1.0

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

resources:

  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack.webhook))

  # Github Releases
  - name: acceptance-tests-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-acceptance-tests
      access_token: ((github.access_token))
      order_by: time

  - name: action-scheduler-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-action-scheduler
      access_token: ((github.access_token))
      order_by: time

  - name: action-worker-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-action-worker
      access_token: ((github.access_token))
      order_by: time

  - name: action-processor-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-action-processor
      access_token: ((github.access_token))
      order_by: time

  - name: case-api-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-case-api
      access_token: ((github.access_token))
      order_by: time

  - name: case-processor-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-case-processor
      access_token: ((github.access_token))
      order_by: time

  - name: print-file-service-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-print-file-service
      access_token: ((github.access_token))
      order_by: time

  - name: uac-qid-service-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-uac-qid-service
      access_token: ((github.access_token))
      order_by: time

  - name: ops-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-ops
      access_token: ((github.access_token))
      order_by: time

  - name: rm-toolbox-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-toolbox
      access_token: ((github.access_token))
      order_by: time

  - name: monitoring-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-monitoring
      access_token: ((github.access_token))
      order_by: time

  - name: pubsub-adapter-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-pubsub-adapter
      access_token: ((github.access_token))
      order_by: time

  - name: pubsub-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-pubsub
      access_token: ((github.access_token))
      order_by: time

  - name: qid-batch-runner-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-qid-batch-runner
      access_token: ((github.access_token))
      order_by: time

  - name: sample-loader-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-sample-loader
      access_token: ((github.access_token))
      order_by: time

  - name: fieldwork-adapter-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-fieldwork-adapter
      access_token: ((github.access_token))
      order_by: time

  - name: notify-processor-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-notify-processor
      access_token: ((github.access_token))
      order_by: time

  - name: data-exporter-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-dataexporter
      access_token: ((github.access_token))
      order_by: time

  - name: exception-manager-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-exception-manager
      access_token: ((github.access_token))
      order_by: time

  - name: performance-tests-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-performance-tests
      access_token: ((github.access_token))
      order_by: time

  - name: ddl-release
    type: github-release-latest
    source:
      owner: ONSdigital
      repository: census-rm-ddl
      access_token: ((github.access_token))
      order_by: time

  # Docker Images
  - name: acceptance-tests-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-acceptance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: acceptance-tests-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-acceptance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-scheduler-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-action-scheduler
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-scheduler-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-action-scheduler
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-worker-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-action-worker
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-worker-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-action-worker
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-processor-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-action-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: action-processor-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-action-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-api-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-case-api
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-api-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-case-api
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-processor-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-case-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: case-processor-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-case-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: print-file-service-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-print-file-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: print-file-service-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-print-file-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: uac-qid-service-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-uac-qid-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: uac-qid-service-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-uac-qid-service
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ops-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-ops
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ops-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-ops
      username: _json_key
      password: ((gcp.service_account_json))

  - name: rm-toolbox-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-toolbox
      username: _json_key
      password: ((gcp.service_account_json))

  - name: rm-toolbox-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-toolbox
      username: _json_key
      password: ((gcp.service_account_json))

  - name: monitoring-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-monitoring
      username: _json_key
      password: ((gcp.service_account_json))

  - name: monitoring-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-monitoring
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-adapter-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-pubsub-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-adapter-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-pubsub-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-pubsub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: pubsub-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-pubsub
      username: _json_key
      password: ((gcp.service_account_json))

  - name: qid-batch-runner-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-qid-batch-runner
      username: _json_key
      password: ((gcp.service_account_json))

  - name: qid-batch-runner-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-qid-batch-runner
      username: _json_key
      password: ((gcp.service_account_json))

  - name: sample-loader-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-sample-loader
      username: _json_key
      password: ((gcp.service_account_json))

  - name: sample-loader-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-sample-loader
      username: _json_key
      password: ((gcp.service_account_json))

  - name: fieldwork-adapter-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-fieldwork-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: fieldwork-adapter-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-fieldwork-adapter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-processor-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-notify-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: notify-processor-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-notify-processor
      username: _json_key
      password: ((gcp.service_account_json))

  - name: data-exporter-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-data-exporter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: data-exporter-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-data-exporter
      username: _json_key
      password: ((gcp.service_account_json))

  - name: exception-manager-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-exception-manager
      username: _json_key
      password: ((gcp.service_account_json))

  - name: exception-manager-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-exception-manager
      username: _json_key
      password: ((gcp.service_account_json))

  - name: performance-tests-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-performance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: performance-tests-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-performance-tests
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ddl-docker-image-ci
    type: docker-image
    source:
      repository: ((docker-registry-ci))/rm/census-rm-ddl
      username: _json_key
      password: ((gcp.service_account_json))

  - name: ddl-docker-image-gcr
    type: docker-image
    source:
      repository: ((docker-registry-gcr))/rm/census-rm-ddl
      username: _json_key
      password: ((gcp.service_account_json))
templating:

slack_failure_alert_prebuild: &slack_failure_alert_prebuild
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME failed",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#ff0000"
      }
    ]

slack_failure_alert_ci: &slack_failure_alert_ci
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME failed",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Registry",
            "value": "((docker-registry-ci))",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#ff0000"
      }
    ]

slack_failure_alert_gcr: &slack_failure_alert_gcr
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME failed. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME failed",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Registry",
            "value": "((docker-registry-gcr))",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#ff0000"
      }
    ]

slack_error_alert_prebuild: &slack_error_alert_prebuild
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME errored. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME errored",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#f58a3d"
      }
    ]

slack_error_alert_ci: &slack_error_alert_ci
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME errored. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME errored",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Registry",
            "value": "((docker-registry-ci))",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#f58a3d"
      }
    ]

slack_error_alert_gcr: &slack_error_alert_gcr
  put: slack-alert
  params:
    icon_emoji: ":concourse:"
    username: Concourse
    attachments: [
      {
        "fallback": "$BUILD_JOB_NAME errored. See build: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "title": "$BUILD_JOB_NAME errored",
        "title_link": "$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME",
        "fields": [
          {
            "title": "Pipeline",
            "value": "$BUILD_PIPELINE_NAME",
            "short": true
          },
          {
            "title": "Registry",
            "value": "((docker-registry-gcr))",
            "short": true
          },
          {
            "title": "Build",
            "value": "#$BUILD_NAME",
            "short": true
          }
        ],
        "color": "#f58a3d"
      }
    ]

jobs:

  - name: build-action-scheduler-release
    plan:
    - get: action-scheduler-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Action Scheduler Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: action-scheduler-release
        outputs:
          - name: build
          - name: extracted-action-scheduler
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd action-scheduler-release
              tar -xzf source.tar.gz -C ../extracted-action-scheduler --strip-components=1
              cd ../extracted-action-scheduler
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: action-scheduler-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: action-scheduler-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: action-scheduler-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - action-scheduler-docker-image-ci
        tag_file: action-scheduler-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-action-worker-release
    plan:
    - get: action-worker-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Action Worker Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: action-worker-release
        outputs:
          - name: build
          - name: extracted-action-worker
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd action-worker-release
              tar -xzf source.tar.gz -C ../extracted-action-worker --strip-components=1
              cd ../extracted-action-worker
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: action-worker-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: action-worker-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: action-worker-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - action-worker-docker-image-ci
        tag_file: action-worker-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-action-processor-release
    plan:
    - get: action-processor-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Action Processor Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: action-processor-release
        outputs:
          - name: build
          - name: extracted-action-processor
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd action-processor-release
              tar -xzf source.tar.gz -C ../extracted-action-processor --strip-components=1
              cd ../extracted-action-processor
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: action-processor-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: action-processor-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: action-processor-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - action-processor-docker-image-ci
        tag_file: action-processor-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-case-api-release
    plan:
    - get: case-api-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Case API Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: case-api-release
        outputs:
          - name: build
          - name: extracted-case-api
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd case-api-release
              tar -xzf source.tar.gz -C ../extracted-case-api --strip-components=1
              cd ../extracted-case-api
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
    - put: case-api-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: case-api-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: case-api-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - case-api-docker-image-ci
        tag_file: case-api-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-case-processor-release
    plan:
    - get: case-processor-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Case Processor Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: case-processor-release
        outputs:
          - name: build
          - name: extracted-case-processor
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd case-processor-release
              tar -xzf source.tar.gz -C ../extracted-case-processor --strip-components=1
              cd ../extracted-case-processor
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: case-processor-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: case-processor-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: case-processor-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - case-processor-docker-image-ci
        tag_file: case-processor-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-print-file-service-release
    plan:
    - get: print-file-service-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Print File Service Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: print-file-service-release
        outputs:
          - name: extracted-print-file-service
        run:
          path: sh
          args:
            - -exc
            - |
              cd print-file-service-release
              tar -xzf source.tar.gz -C ../extracted-print-file-service --strip-components=1
    - put: print-file-service-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-print-file-service
        tag_file: print-file-service-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: print-file-service-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-print-file-service
        cache_from:
          - print-file-service-docker-image-ci
        tag_file: print-file-service-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-uac-qid-service-release
    plan:
    - get: uac-qid-service-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build UAC QID Service Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: uac-qid-service-release
        outputs:
          - name: build
          - name: extracted-uac-qid-service
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd uac-qid-service-release
              tar -xzf source.tar.gz -C ../extracted-uac-qid-service --strip-components=1
              cd ../extracted-uac-qid-service
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
    - put: uac-qid-service-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: uac-qid-service-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: uac-qid-service-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - uac-qid-service-docker-image-ci
        tag_file: uac-qid-service-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-ops-release
    plan:
    - get: ops-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Ops Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: ops-release
        outputs:
          - name: extracted-ops
        run:
          path: sh
          args:
            - -exc
            - |
              cd ops-release
              tar -xzf source.tar.gz -C ../extracted-ops --strip-components=1
    - put: ops-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-ops
        tag_file: ops-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: ops-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-ops
        cache_from:
          - ops-docker-image-ci
        tag_file: ops-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-rm-toolbox-release
    plan:
    - get: rm-toolbox-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build RM-toolbox Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: rm-toolbox-release
        outputs:
          - name: extracted-rm-toolbox
        run:
          path: sh
          args:
            - -exc
            - |
              cd rm-toolbox-release
              tar -xzf source.tar.gz -C ../extracted-rm-toolbox --strip-components=1
    - put: rm-toolbox-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-rm-toolbox
        tag_file: rm-toolbox-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: rm-toolbox-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-rm-toolbox
        cache_from:
          - rm-toolbox-docker-image-ci
        tag_file: rm-toolbox-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-monitoring-release
    plan:
    - get: monitoring-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build RM-toolbox Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: monitoring-release
        outputs:
          - name: extracted-monitoring
        run:
          path: sh
          args:
            - -exc
            - |
              cd monitoring-release
              tar -xzf source.tar.gz -C ../extracted-monitoring --strip-components=1
    - put: monitoring-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-monitoring
        tag_file: monitoring-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: monitoring-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-monitoring
        cache_from:
          - monitoring-docker-image-ci
        tag_file: monitoring-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-pubsub-adapter-release
    plan:
    - get: pubsub-adapter-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build PubSub Adapter Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: pubsub-adapter-release
        outputs:
          - name: extracted-pubsub-adapter
        run:
          path: sh
          args:
            - -exc
            - |
              cd pubsub-adapter-release
              tar -xzf source.tar.gz -C ../extracted-pubsub-adapter --strip-components=1
    - put: pubsub-adapter-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-pubsub-adapter
        tag_file: pubsub-adapter-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: pubsub-adapter-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-pubsub-adapter
        cache_from:
          - pubsub-adapter-docker-image-ci
        tag_file: pubsub-adapter-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-pubsub-release
    plan:
    - get: pubsub-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build PubSub Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: pubsub-release
        outputs:
          - name: extracted-pubsub
        run:
          path: sh
          args:
            - -exc
            - |
              cd pubsub-release
              tar -xzf source.tar.gz -C ../extracted-pubsub --strip-components=1
    - put: pubsub-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-pubsub
        tag_file: pubsub-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: pubsub-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-pubsub
        cache_from:
          - pubsub-docker-image-ci
        tag_file: pubsub-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-batch-runner-release
    plan:
    - get: qid-batch-runner-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Batch Runner Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: qid-batch-runner-release
        outputs:
          - name: extracted-batch-runner
        run:
          path: sh
          args:
            - -exc
            - |
              cd qid-batch-runner-release
              tar -xzf source.tar.gz -C ../extracted-batch-runner --strip-components=1
    - put: qid-batch-runner-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-batch-runner
        tag_file: qid-batch-runner-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: qid-batch-runner-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-batch-runner
        cache_from:
          - qid-batch-runner-docker-image-ci
        tag_file: qid-batch-runner-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-sample-loader-release
    plan:
    - get: sample-loader-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Sample Loader Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: sample-loader-release
        outputs:
          - name: extracted-sample-loader
        run:
          path: sh
          args:
            - -exc
            - |
              cd sample-loader-release
              tar -xzf source.tar.gz -C ../extracted-sample-loader --strip-components=1
    - put: sample-loader-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-sample-loader
        tag_file: sample-loader-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: sample-loader-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-sample-loader
        cache_from:
          - sample-loader-docker-image-ci
        tag_file: sample-loader-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-fieldwork-adapter-release
    plan:
    - get: fieldwork-adapter-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Fieldwork Adapter Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: fieldwork-adapter-release
        outputs:
          - name: build
          - name: extracted-fieldwork-adapter
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd fieldwork-adapter-release
              tar -xzf source.tar.gz -C ../extracted-fieldwork-adapter --strip-components=1
              cd ../extracted-fieldwork-adapter
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: fieldwork-adapter-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: fieldwork-adapter-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: fieldwork-adapter-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - fieldwork-adapter-docker-image-ci
        tag_file: fieldwork-adapter-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-notify-processor-release
    plan:
    - get: notify-processor-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Notify Processor Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: notify-processor-release
        outputs:
          - name: build
          - name: extracted-notify-processor
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd notify-processor-release
              tar -xzf source.tar.gz -C ../extracted-notify-processor --strip-components=1
              cd ../extracted-notify-processor
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
              cp healthcheck.sh ../build
    - put: notify-processor-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: notify-processor-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: notify-processor-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - notify-processor-docker-image-ci
        tag_file: notify-processor-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-acceptance-tests-release
    plan:
    - get: acceptance-tests-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Acceptance Tests Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: acceptance-tests-release
        outputs:
          - name: extracted-acceptance-tests
        run:
          path: sh
          args:
            - -exc
            - |
              cd acceptance-tests-release
              tar -xzf source.tar.gz -C ../extracted-acceptance-tests --strip-components=1
    - put: acceptance-tests-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-acceptance-tests
        tag_file: acceptance-tests-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: acceptance-tests-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-acceptance-tests
        cache_from:
          - acceptance-tests-docker-image-ci
        tag_file: acceptance-tests-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-data-exporter-release
    plan:
    - get: data-exporter-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Data Exporter Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: data-exporter-release
        outputs:
          - name: extracted-data-exporter
        run:
          path: sh
          args:
            - -exc
            - |
              cd data-exporter-release
              tar -xzf source.tar.gz -C ../extracted-data-exporter --strip-components=1
    - put: data-exporter-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-data-exporter/docker
        tag_file: data-exporter-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: data-exporter-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-data-exporter/docker
        cache_from:
          - data-exporter-docker-image-ci
        tag_file: data-exporter-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-exception-manager-release
    plan:
    - get: exception-manager-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Exception Manager Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: adoptopenjdk/maven-openjdk11
        inputs:
          - name: exception-manager-release
        outputs:
          - name: build
          - name: extracted-exception-manager
        run:
          path: sh
          args:
            - -exc
            - |
              mkdir -p build/target
              cd exception-manager-release
              tar -xzf source.tar.gz -C ../extracted-exception-manager --strip-components=1
              cd ../extracted-exception-manager
              mvn package -DskipITs -Ddockerfile.skip
              cp target/census-rm-*.jar ../build/target
              cp Dockerfile ../build
    - put: exception-manager-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: build
        tag_file: exception-manager-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: exception-manager-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: build
        cache_from:
          - exception-manager-docker-image-ci
        tag_file: exception-manager-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-performance-tests-release
    plan:
    - get: performance-tests-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build Data Exporter Image (release)
      on_failure: *slack_failure_alert_prebuild
      on_error: *slack_error_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: performance-tests-release
        outputs:
          - name: extracted-performance-tests
        run:
          path: sh
          args:
            - -exc
            - |
              cd performance-tests-release
              tar -xzf source.tar.gz -C ../extracted-performance-tests --strip-components=1
    - put: performance-tests-docker-image-ci
      on_failure: *slack_failure_alert_ci
      on_error: *slack_error_alert_ci
      params:
        build: extracted-performance-tests
        tag_file: performance-tests-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: performance-tests-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      on_error: *slack_error_alert_gcr
      params:
        build: extracted-performance-tests
        cache_from:
          - performance-tests-docker-image-ci
        tag_file: performance-tests-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true

  - name: build-ddl-release
    plan:
    - get: ddl-release
      params:
        include_source_tarball: true
      trigger: true
    - task: Build DDL Image (release)
      on_failure: *slack_failure_alert_prebuild
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: ddl-release
        outputs:
          - name: extracted-ddl
        run:
          path: sh
          args:
            - -exc
            - |
              cd ddl-release
              tar -xzf source.tar.gz -C ../extracted-ddl --strip-components=1
    - put: ddl-docker-image-ci
      on_failure: *slack_failure_alert_ci
      params:
        build: extracted-ddl
        tag_file: ddl-release/tag
        tag_as_latest: false
      get_params:
        save: true
    - put: ddl-docker-image-gcr
      on_failure: *slack_failure_alert_gcr
      params:
        build: extracted-ddl
        cache_from:
          - ddl-docker-image-ci
        tag_file: ddl-release/tag
        tag_as_latest: false
      get_params:
        skip_download: true
