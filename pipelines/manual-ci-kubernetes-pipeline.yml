---
resources:
- name: census-rm-deploy
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-deploy.git
    private_key: ((github-private-key))

- name: census-rm-kubernetes-microservices-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-kubernetes.git
    private_key: ((github-private-key))
    paths: [microservices/*]

- name: census-rm-kubernetes-handlers-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-kubernetes.git
    private_key: ((github-private-key))
    paths: [handlers/*]

- name: census-rm-kubernetes-ops-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-kubernetes.git
    private_key: ((github-private-key))
    paths: [optional/ops-*]

- name: acceptance-tests-repo
  type: git
  source:
    uri: git@github.com:ONSdigital/census-rm-acceptance-tests.git
    private_key: ((github-private-key))
    paths: [kubernetes.env, tasks/*]

- name: acceptance-tests-docker-image
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-acceptance-tests
    username: _json_key
    password: ((gcp-service-account-json))

- name: action-scheduler-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-action-scheduler
    username: _json_key
    password: ((gcp-service-account-json))

- name: actionexportersvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-actionexportersvc
    username: _json_key
    password: ((gcp-service-account-json))

- name: case-processor-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-case-processor
    username: _json_key
    password: ((gcp-service-account-json))

- name: iacsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-iacsvc
    username: _json_key
    password: ((gcp-service-account-json))

- name: pubsubsvc-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-pubsub
    username: _json_key
    password: ((gcp-service-account-json))

- name: ops-docker-latest
  type: docker-image
  source:
    repository: eu.gcr.io/census-rm-ci/rm/census-rm-ops
    username: _json_key
    password: ((gcp-service-account-json))

jobs:

# Kubernetes Config
- name: action-scheduler-apply-config
  serial: true
  serial_groups: [action-scheduler]
  plan:
  - get: census-rm-kubernetes-microservices-repo
    
  - get: action-scheduler-docker-latest
    
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-service-and-deploy
    file: census-rm-deploy/tasks/kubectl-apply-service-and-deploy.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: action-scheduler
      KUBERNETES_SELECTOR: app=action-scheduler
      KUBERNETES_FILE_PATH: kubernetes-repo/microservices
      KUBERNETES_FILE_PREFIX: action-scheduler
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-microservices-repo}

- name: actionexportersvc-apply-config
  serial: true
  serial_groups: [actionexportersvc]
  plan:
  - get: census-rm-kubernetes-handlers-repo
  - get: actionexportersvc-docker-latest
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-service-and-deploy
    file: census-rm-deploy/tasks/kubectl-apply-service-and-deploy.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: actionexportersvc
      KUBERNETES_SELECTOR: app=actionexportersvc
      KUBERNETES_FILE_PATH: kubernetes-repo/handlers
      KUBERNETES_FILE_PREFIX: actionexporter
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-handlers-repo}

- name: case-processor-apply-config
  serial: true
  serial_groups: [case-processor]
  plan:
  - get: census-rm-kubernetes-microservices-repo
  - get: case-processor-docker-latest
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-deployment
    file: census-rm-deploy/tasks/kubectl-apply-deployment.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: case-processor
      KUBERNETES_SELECTOR: app=case-processor
      KUBERNETES_FILE_PATH: kubernetes-repo/microservices
      KUBERNETES_FILE_PREFIX: case-processor
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-microservices-repo}

- name: iacsvc-apply-config
  serial: true
  serial_groups: [iacsvc]
  plan:
  - get: census-rm-kubernetes-microservices-repo
  - get: iacsvc-docker-latest
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-service-and-deploy
    file: census-rm-deploy/tasks/kubectl-apply-service-and-deploy.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: iacsvc
      KUBERNETES_SELECTOR: app=iacsvc
      KUBERNETES_FILE_PATH: kubernetes-repo/microservices
      KUBERNETES_FILE_PREFIX: iac
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-microservices-repo}

- name: pubsubsvc-apply-config
  serial: true
  serial_groups: [pubsubsvc]
  plan:
  - get: census-rm-kubernetes-microservices-repo
  - get: pubsubsvc-docker-latest
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-deployment
    file: census-rm-deploy/tasks/kubectl-apply-deployment.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: pubsubsvc
      KUBERNETES_SELECTOR: app=pubsubsvc
      KUBERNETES_FILE_PATH: kubernetes-repo/microservices
      KUBERNETES_FILE_PREFIX: pubsub
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-microservices-repo}

- name: ops-apply-config
  serial: true
  serial_groups: [ops]
  plan:
  - get: census-rm-kubernetes-ops-repo
  - get: ops-docker-latest
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: apply-deployment
    file: census-rm-deploy/tasks/kubectl-apply-service-and-deploy.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: ops
      KUBERNETES_SELECTOR: app=ops
      KUBERNETES_FILE_PATH: kubernetes-repo/optional
      KUBERNETES_FILE_PREFIX: ops
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {kubernetes-repo: census-rm-kubernetes-ops-repo}

# Patch to trigger Kubernetes to pull the latest docker image
- name: action-scheduler-deploy-latest
  serial: true
  serial_groups: [action-scheduler]
  plan:
  - get: census-rm-kubernetes-microservices-repo
    passed: [action-scheduler-apply-config]
  - get: action-scheduler-docker-latest
    passed: [action-scheduler-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: action-scheduler
      KUBERNETES_SELECTOR: app=action-scheduler
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: action-scheduler-docker-latest}

- name: actionexportersvc-deploy-latest
  serial: true
  serial_groups: [actionexportersvc]
  plan:
  - get: census-rm-kubernetes-handlers-repo
    passed: [actionexportersvc-apply-config]
  - get: actionexportersvc-docker-latest
    passed: [actionexportersvc-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: actionexportersvc
      KUBERNETES_SELECTOR: app=actionexportersvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: actionexportersvc-docker-latest}

- name: case-processor-deploy-latest
  serial: true
  serial_groups: [case-processor]
  plan:
  - get: census-rm-kubernetes-microservices-repo
    passed: [case-processor-apply-config]
  - get: case-processor-docker-latest
    passed: [case-processor-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: case-processor
      KUBERNETES_SELECTOR: app=case-processor
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: case-processor-docker-latest}

- name: iacsvc-deploy-latest
  serial: true
  serial_groups: [iacsvc]
  plan:
  - get: census-rm-kubernetes-microservices-repo
    passed: [iacsvc-apply-config]
  - get: iacsvc-docker-latest
    passed: [iacsvc-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: iacsvc
      KUBERNETES_SELECTOR: app=iacsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: iacsvc-docker-latest}

- name: pubsubsvc-deploy-latest
  serial: true
  serial_groups: [pubsubsvc]
  plan:
  - get: census-rm-kubernetes-microservices-repo
    passed: [pubsubsvc-apply-config]
  - get: pubsubsvc-docker-latest
    passed: [pubsubsvc-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: pubsubsvc
      KUBERNETES_SELECTOR: app=pubsubsvc
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: pubsubsvc-docker-latest}

- name: ops-deploy-latest
  serial: true
  serial_groups: [ops]
  plan:
  - get: census-rm-kubernetes-ops-repo
    passed: [ops-apply-config]
  - get: ops-docker-latest
    passed: [ops-apply-config]
    params:
      skip_download: true
  - get: census-rm-deploy
  - task: patch-to-pull-latest-image
    file: census-rm-deploy/tasks/kubectl-patch-to-latest.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
      KUBERNETES_DEPLOYMENT_NAME: ops
      KUBERNETES_SELECTOR: app=ops
      WAIT_UNTIL_AVAILABLE_TIMEOUT: 200s
    input_mapping: {docker-image-resource: ops-docker-latest}


- name: "Acceptance Tests"
  serial: true
  serial_groups: [action-scheduler, actionexportersvc, case-processor, iacsvc, pubsubsvc]
  plan:
  - get: acceptance-tests-repo
  - get: acceptance-tests-docker-image
    params:
      skip_download: true
  - get: census-rm-kubernetes-handlers-repo
    passed: [actionexportersvc-deploy-latest]
  - get: census-rm-kubernetes-microservices-repo
    passed: [action-scheduler-deploy-latest, case-processor-deploy-latest, iacsvc-deploy-latest, pubsubsvc-deploy-latest]
  - get: action-scheduler-docker-latest
    passed: [action-scheduler-deploy-latest]
    params:
      skip_download: true
  - get: actionexportersvc-docker-latest
    passed: [actionexportersvc-deploy-latest]
    params:
      skip_download: true
  - get: case-processor-docker-latest
    passed: [case-processor-deploy-latest]
    params:
      skip_download: true
  - get: iacsvc-docker-latest
    passed: [iacsvc-deploy-latest]
    params:
      skip_download: true
  - get: pubsubsvc-docker-latest
    passed: [pubsubsvc-deploy-latest]
    params:
      skip_download: true
  - task: "Run Acceptance Tests (in K8s)"
    file: acceptance-tests-repo/tasks/kubectl-run-acceptance-tests.yml
    params:
      SERVICE_ACCOUNT_JSON: ((gcp-service-account-json))
      GCP_PROJECT_NAME: ((gcp-project-name))
      KUBERNETES_CLUSTER: ((kubernetes-cluster-name))
    input_mapping: {acceptance-tests-repo: acceptance-tests-repo}
